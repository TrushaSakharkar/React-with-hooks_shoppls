{"version":3,"sources":["components/main.component.js","components/updateAction.js","components/address.component.js","components/contact.component.js","components/print.component.js","components/names.component.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","history","useHistory","push","updateAction","state","payload","yourDetails","props","useStateMachine","action","useForm","defaultValues","register","handleSubmit","style","position","left","top","display","className","name","ref","onClick","data","console","log","e","Firstname","Lastname","Address","City","Email","Contactno","Object","entries","map","key","NotificationManager","info","productlist","colorlist","products","product","color","price","useState","setColor","setProduct","min","setMin","max","setMax","justifyContent","alignItems","list","id","placeholder","onChange","target","value","mylist","type","currentUserd","i","App","basename","path","exact","component","Main","Names","Print","Contact","Boolean","window","location","hostname","match","createStore","ReactDOM","render","StrictMode","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cc077ec2.chunk.js","sourcesContent":["import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { StateMachineProvider, createStore } from \"little-state-machine\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nfunction Main() {\n  let history = useHistory();\n\n  return (\n      <div>\n      <h1>Page Form Wizard</h1>\n      {history.push(\"/names\")}\n      </div>\n  );\n}\nexport default withRouter(Main);\n\n","export default function updateAction(state,payload)\n{\n    return{\n        ...state,\n        yourDetails:{\n            ...state.yourDetails,\n            ...payload\n        }\n    };\n}","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"./updateAction\";\nimport rootElement from \"../index.js\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Address = props => {\n    const { state,action } = useStateMachine(updateAction);\n    const { register, handleSubmit } = useForm({\n      defaultValues: state.yourDetails  \n    });\n  let history = useHistory();\n\n  const onPrevious = data => {\n    action(data);\n    console.log(state);\n    // window.STATE_MACHINE_GET_STORE()\n    {history.push(\"/names\")}\n  };\n  const onNext = data => {\n    action(data);\n    {history.push(\"/contact\")}\n  };\n  return (\n    <div style={{position:\"absolute\", left:\"45%\", top:\"35%\"}}>\n    <h2>Fill the Form!</h2>\n    <form style={{display:\"block\"}}>\n        <div>\n      <label>\n        Address:\n        <input className=\"form-control rounded-pill\" name=\"Address\" ref={register} />\n      </label>\n      </div>\n      <div>\n      <label>\n        City:\n        <input className=\"form-control rounded-pill\" name=\"City\" ref={register} />\n      </label>\n      </div>\n      <div>\n      <button className=\"rounded-pill btn btn-dark\" onClick={handleSubmit(onPrevious)}>Previous</button>\n      <button className=\"rounded-pill btn btn-dark\" onClick={handleSubmit(onNext)}>Next</button>\n      </div>\n      </form>\n      </div>\n  );\n};\n\nexport default withRouter(Address);","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"./updateAction\";\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Contact = props => {\n    const { state,action } = useStateMachine(updateAction);\n  const { register, handleSubmit } = useForm({\n    defaultValues: state.yourDetails  \n  });\n  let history = useHistory();\n\n  const onPrevious = data => {\n    action(data);\n    {history.push(\"/address\")}\n\n  };\n  const onSubmit = data => {\n    action(data);\n    console.log(state.yourDetails);\n    var e=\"Your name is \";\n    e=e+ state.yourDetails.Firstname + \" \" + state.yourDetails.Lastname;\n    e=e+\", you live at \"+state.yourDetails.Address + \", \" + state.yourDetails.City+ \" and you can be contacted at \" + state.yourDetails.Email + \" or \" + state.yourDetails.Contactno; \n    e=e+\".\"\n    Object.entries(state.yourDetails).map(([key, value]) => {\n      console.log(key);\n  })\n  \n    NotificationManager.info('', e , 10000);\n\n  // window.location='/print';\n  };\n  return (\n    <div style={{position:\"absolute\", left:\"45%\", top:\"35%\"}}>\n        <NotificationContainer/>\n    <h2>Fill the Form!</h2>\n    <form style={{display:\"block\"}} >\n      <div>\n      <label>\n        Email:\n        <input className=\"form-control rounded-pill\" name=\"Email\" ref={register} />\n      </label>\n      </div>\n        <div>\n      <label>\n        Contact No:\n       <input className=\"form-control rounded-pill\" name=\"Contactno\" ref={register} />\n      </label>\n      </div>\n      <div>\n      <button className=\"rounded-pill btn btn-dark\" onClick={handleSubmit(onPrevious)}>Previous</button>\n      <button className=\"rounded-pill btn btn-dark\" onClick={handleSubmit(onSubmit)}>Submit</button>\n      </div>\n    </form>\n    <br/>\n    <br/>\n     \n    <button style={{position:\"absolute\"}} className=\"rounded-pill btn btn-dark\" onClick={(e) =>{history.push(\"/print\")}}>Go to shop</button>\n    </div>\n  );\n};\n\nexport default withRouter(Contact);","import React, {Component, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nconst productlist=[\"Shirt\",\"Mobile\",\"Skirt\",\"Watch\"];\nconst colorlist=[\"Red\",\"Blue\",\"White\",\"Black\"];\nconst products=[\n    {\n        product: \"Shirt\",\n        color:\"Red\",\n        price:1000\n    },\n    {\n        product: \"Skirt\",\n        color:\"Blue\",\n        price:2000\n    },\n    {\n        product: \"Watch\",\n        color:\"Black\",\n        price:3000\n    },\n    {\n        product: \"Mobile\",\n        color:\"White\",\n        price:10000\n    },\n    {\n        product: \"Shirt\",\n        color:\"Blue\",\n        price:1500\n    },\n    {\n        product: \"Mobile\",\n        color:\"Black\",\n        price:10000\n    },\n    {\n        product: \"Shirt\",\n        color:\"White\",\n        price:1500\n    }\n];\n\nconst Print = props => {\n    const [color, setColor] = useState(\"\"); \n    const [product, setProduct] = useState(\"\");\n    const [min, setMin] = useState(0);\n    const [max, setMax] = useState(20000);\n  \n   \n    console.log(\"hdbfvshdfvb0\");\n   \n        return (\n            <div>\n                 <div className=\"row h-100\" style={{justifyContent:\"center\" ,alignItems:\"center\" }} >\n                <div className=\"col-sm-12 mx-auto my-auto\">\n                    <h1>Set Filters</h1>\n                <form style={{ display: \"flex\", left:\"40%\" }}>\n                 <div className=\"form-group\">\n                                        <input className=\"form-control rounded-pill\" list=\"productData\" id=\"productlist\" placeholder=\"Product\" onChange={(e) => setProduct(e.target.value)} />\n                                        <datalist id=\"productData\">\n                                            {productlist.map((mylist) => <option value={mylist} />)}\n                                        </datalist>\n                </div>\n                {'  '}\n                <div className=\"form-group\">\n                                        <input className=\"form-control rounded-pill\" list=\"colorData\" id=\"colorlist\" placeholder=\"Color\" onChange={(e) =>  setColor(e.target.value)} />\n                                        <datalist id=\"colorData\">\n                                            {colorlist.map((mylist) => <option value={mylist} />)}\n                                        </datalist>\n                </div>\n                {'  '}\n                <div className=\"form-group\">\n                    <input className=\"form-control rounded-pill\" type=\"number\" placeholder=\"Min Price\" onChange={(e) =>  setMin(e.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <input className=\"form-control rounded-pill\" type=\"number\" placeholder=\"Max Price\" onChange={(e) =>  setMax(e.target.value)} />\n                </div>\n                </form>\n                </div>\n                </div>\n                <br/>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>Product name</th>\n                            <th>Price</th>\n                            <th>Color</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        products.map((currentUserd, i) => {\n                            \n                              \n                                if((({product}!==null && currentUserd.product==={product}) || {product}===\"\") && \n                                (({color}!==null && currentUserd.color==={color}) || {color}===\"\") && \n                                currentUserd.price>={min} &&  currentUserd.price<={max})\n                                {\n                                    return (\n                                <tr>\n                                    <td>{currentUserd.product}</td>\n                                    <td>{currentUserd.price}</td>\n                                    <td>{currentUserd.color}</td>\n                                </tr>\n                                    )\n                                    \n                                    }\n                            \n                        })\n                    }\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    \n}\nexport default withRouter(Print);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useStateMachine } from \"little-state-machine\";\nimport updateAction from \"./updateAction\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Names = props => {\n    const { state,action } = useStateMachine(updateAction);\n  const { register, handleSubmit } = useForm({\n      defaultValues: state.yourDetails  \n  });\n  let history = useHistory();\n\n  const onNext = data => {\n    action(data);\n    console.log(data);\n    {history.push(\"/address\")}\n  };\n\n  return (\n      <div style={{position:\"absolute\", left:\"45%\", top:\"35%\"}}>\n          <h2>Fill the Form!</h2>\n    <form style={{display:\"block\"}} >\n        <div>\n      <label>\n        First Name:\n        <input className=\"form-control rounded-pill\" name=\"Firstname\" ref={register} />\n      </label>\n      </div>\n        <div>\n      <label>\n        Last Name:\n        <input className=\"form-control rounded-pill\" name=\"Lastname\" ref={register} />\n      </label>\n      </div>\n      <div>\n      <button className=\"rounded-pill btn btn-dark\" onClick={handleSubmit(onNext)}>Next</button>\n      </div>\n      </form>\n      </div>\n\n   \n  );\n};\n\nexport default withRouter(Names);","import React, {Component} from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Main from \"./components/main.component\"\nimport Address from \"./components/address.component\"\nimport Contact from \"./components/contact.component\"\nimport Print from \"./components/print.component\"\nimport Names from \"./components/names.component\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename='/React-with-hooks_shoppls'>\n      <Route path={ '/'} exact component={Main}/>\n     <Route path={ '/names'} exact component={Names}/>\n     <Route path={ '/print'} exact component={Print}/>\n     <Route path={ '/address'} exact component={Address}/> \n     {<Route path={ '/contact'} exact component={Contact}/> } \n   </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { StateMachineProvider, createStore ,DevTool} from \"little-state-machine\";\n\n\n\ncreateStore({\n  yourDetails: {\n      Firstname:\"\",\n      Lastname:\"\",\n      Address:\"\",\n      City:\"\",\n      Email:\"\",\n      Contactno:\"\"\n  }\n});\n\nReactDOM.render(\n  <StateMachineProvider>\n  <React.StrictMode>\n    <App />\n    {process.env.NODE_ENV !== 'production' && <DevTool />}\n  </React.StrictMode>\n  </StateMachineProvider>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}